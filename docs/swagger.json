{
    "swagger": "2.0",
    "info": {
        "description": "Documentação da API IPTV",
        "title": "API IPTV",
        "contact": {
            "name": "Suporte",
            "email": "suporte@example.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/clients": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna todos os clientes associados ao usuário autenticado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clientes"
                ],
                "summary": "Lista clientes",
                "responses": {
                    "200": {
                        "description": "Lista de clientes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ClientData"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não fornecido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao buscar clientes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/clients-table": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna uma lista de clientes paginada e filtrada para uso em DataTables, associados ao member_id do token. Inclui filtro de status online e expiração.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ClientsTable"
                ],
                "summary": "Retorna clientes paginados e filtrados",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Número da página (padrão: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limite de registros por página (padrão: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Termo de pesquisa para filtrar por username ou reseller_notes",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filtrar usuários online (true para listar apenas online, false para todos)",
                        "name": "online",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filtrar clientes por vencimento (7, 15, 30, custom até 90 ou '0' para vencidos)",
                        "name": "expiration_filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna a lista de clientes paginada e informações de paginação",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não fornecido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao buscar ou processar os dados",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/create-test": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gera um usuário e senha de teste para IPTV e retorna as credenciais.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Testes IPTV"
                ],
                "summary": "Criar Teste IPTV",
                "parameters": [
                    {
                        "description": "Dados para criação do teste",
                        "name": "test",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.TestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teste criado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/credits": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna o total de créditos do usuário autenticado e o tempo restante do token em segundos.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Créditos"
                ],
                "summary": "Obtém créditos atualizados e tempo restante do token",
                "responses": {
                    "200": {
                        "description": "Dados de créditos e tempo restante",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token inválido ou expirado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro ao buscar créditos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os totais de clientes e testes ativos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Obtém os dados do dashboard",
                "responses": {
                    "200": {
                        "description": "Dados do dashboard",
                        "schema": {
                            "$ref": "#/definitions/controllers.DashboardResponse"
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/details-error/{id_usuario}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os erros registrados na conta de um usuário, incluindo IP, dispositivo e motivo do erro.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Erros"
                ],
                "summary": "Detalhes dos erros do usuário com paginação",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do usuário",
                        "name": "id_usuario",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Número de registros por página (padrão: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Número da página (padrão: 1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista paginada de erros do usuário",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Nenhum erro encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/renew": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza a data de expiração da conta com base no tempo selecionado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Renovação"
                ],
                "summary": "Renovar Conta",
                "parameters": [
                    {
                        "description": "Dados para renovação",
                        "name": "renew",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RenewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conta renovada com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou conta bloqueada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "402": {
                        "description": "Créditos insuficientes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/tools-table/add-screen": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Aumenta o número máximo de conexões do usuário e desconta créditos se aplicável",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolsTable"
                ],
                "summary": "Adiciona uma nova tela ao usuário",
                "parameters": [
                    {
                        "description": "JSON contendo o ID do usuário",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ScreenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o novo total de telas e o saldo de créditos atualizado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro nos parâmetros ou créditos insuficientes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao adicionar tela",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/tools-table/edit/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permite a edição de dados de um usuário na revenda autenticada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolsTable"
                ],
                "summary": "Edita um usuário",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do usuário a ser editado",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do usuário a serem editados",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EditUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário editado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou acesso negado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao processar a requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/tools-table/remove-screen": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Diminui o número máximo de conexões do usuário, garantindo que tenha pelo menos uma tela ativa",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolsTable"
                ],
                "summary": "Remove uma tela do usuário",
                "parameters": [
                    {
                        "description": "JSON contendo o ID do usuário",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ScreenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o novo total de telas",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro nos parâmetros ou limite mínimo atingido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao remover tela",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Autentica um usuário e retorna um token JWT se as credenciais forem válidas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autenticação"
                ],
                "summary": "Autenticação de Usuário",
                "parameters": [
                    {
                        "description": "Credenciais de login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login realizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Credenciais inválidas",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove o token ativo do usuário, invalidando sua sessão.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logout"
                ],
                "summary": "Logout do Usuário",
                "responses": {
                    "200": {
                        "description": "Logout realizado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não autorizado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.DashboardResponse": {
            "type": "object",
            "properties": {
                "totalClientes": {
                    "type": "integer"
                },
                "totalClientesRevenda": {
                    "type": "integer"
                },
                "totalTestesAtivos": {
                    "type": "integer"
                },
                "totalVencido": {
                    "type": "integer"
                }
            }
        },
        "controllers.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginResponse": {
            "type": "object",
            "properties": {
                "credits": {
                    "type": "number"
                },
                "member_group_id": {
                    "type": "integer"
                },
                "member_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "controllers.RenewRequest": {
            "type": "object",
            "properties": {
                "id_cliente": {
                    "type": "integer"
                },
                "quantidade_renovacao_em_meses": {
                    "type": "integer"
                }
            }
        },
        "controllers.TestRequest": {
            "type": "object",
            "properties": {
                "nome_para_aviso": {
                    "type": "string"
                },
                "numero_whats": {
                    "type": "string"
                },
                "password": {
                    "description": "Sempre será gerado",
                    "type": "string"
                },
                "username": {
                    "description": "Pode ser opcional",
                    "type": "string"
                }
            }
        },
        "models.ClientData": {
            "type": "object",
            "properties": {
                "admin_enabled": {
                    "type": "integer",
                    "example": 1
                },
                "admin_notes": {
                    "type": "string",
                    "example": "Notas administrativas"
                },
                "allowed_ips": {
                    "type": "string",
                    "example": "192.168.1.1, 10.0.0.1"
                },
                "allowed_ua": {
                    "type": "string",
                    "example": "Mozilla/5.0"
                },
                "app_id": {
                    "type": "string",
                    "example": "app-12345"
                },
                "as_number": {
                    "type": "string",
                    "example": "AS12345"
                },
                "bouquet": {
                    "type": "string",
                    "example": "Pacote Premium"
                },
                "bypass_ua": {
                    "type": "string",
                    "example": "CustomUserAgent"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-03-15T14:30:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "admin"
                },
                "date_deleted": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "deleted": {
                    "type": "integer",
                    "example": 0
                },
                "email": {
                    "type": "string",
                    "example": "joao@example.com"
                },
                "enabled": {
                    "type": "integer",
                    "example": 1
                },
                "enviar_notificacao": {
                    "type": "string",
                    "example": "true"
                },
                "exp_date": {
                    "type": "string",
                    "example": "2025-12-31T23:59:59Z"
                },
                "force_server_id": {
                    "type": "integer",
                    "example": 3
                },
                "forced_country": {
                    "type": "string",
                    "example": "BR"
                },
                "franquia": {
                    "type": "string",
                    "example": "Franquia ABC"
                },
                "franquia_member_id": {
                    "type": "integer",
                    "example": 999
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "is_e2": {
                    "type": "integer",
                    "example": 1
                },
                "is_isplock": {
                    "type": "integer",
                    "example": 0
                },
                "is_mag": {
                    "type": "integer",
                    "example": 0
                },
                "is_restreamer": {
                    "type": "integer",
                    "example": 0
                },
                "is_stalker": {
                    "type": "integer",
                    "example": 0
                },
                "is_trial": {
                    "type": "integer",
                    "example": 1
                },
                "isp_desc": {
                    "type": "string",
                    "example": "Provedor XYZ"
                },
                "max_connections": {
                    "type": "integer",
                    "example": 5
                },
                "member_id": {
                    "type": "integer",
                    "example": 456
                },
                "nome_para_aviso": {
                    "type": "string",
                    "example": "João Silva"
                },
                "notes2": {
                    "type": "string",
                    "example": "Notas adicionais"
                },
                "numero_whats": {
                    "type": "string",
                    "example": "+5511999999999"
                },
                "p2p": {
                    "type": "integer",
                    "example": 0
                },
                "package_id": {
                    "type": "integer",
                    "example": 11
                },
                "pair_id": {
                    "type": "integer",
                    "example": 789
                },
                "password": {
                    "type": "string",
                    "example": "hashed_password"
                },
                "play_token": {
                    "type": "string",
                    "example": "xyz123token"
                },
                "reseller_notes": {
                    "type": "string",
                    "example": "Notas do revendedor"
                },
                "root_enabled": {
                    "type": "integer",
                    "example": 1
                },
                "sobrenome_avisos": {
                    "type": "string",
                    "example": "Silva"
                },
                "trust_renew": {
                    "type": "integer",
                    "example": 1
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                },
                "usr_device_key": {
                    "type": "string",
                    "example": "device-key-123"
                },
                "usr_mac": {
                    "type": "string",
                    "example": "00:1A:2B:3C:4D:5E"
                }
            }
        },
        "models.EditUserRequest": {
            "type": "object",
            "properties": {
                "bouquet": {
                    "type": "string"
                },
                "device_id": {
                    "type": "integer"
                },
                "enviar_notificacao": {
                    "type": "boolean"
                },
                "mac": {
                    "type": "string"
                },
                "nome_do_aplicativo": {
                    "type": "string"
                },
                "nome_para_aviso": {
                    "type": "string"
                },
                "numero_whats": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "reseller_notes": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "vencimento_aplicativo": {
                    "type": "string"
                }
            }
        },
        "models.ScreenRequest": {
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "userID": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}