basePath: /
definitions:
  controllers.DashboardResponse:
    properties:
      totalClientes:
        type: integer
      totalClientesRevenda:
        type: integer
      totalTestesAtivos:
        type: integer
      totalVencido:
        type: integer
    type: object
  controllers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.LoginResponse:
    properties:
      credits:
        type: number
      member_group_id:
        type: integer
      member_id:
        type: integer
      status:
        type: integer
      token:
        type: string
    type: object
  controllers.RenewRequest:
    properties:
      id_cliente:
        type: integer
      quantidade_renovacao_em_meses:
        type: integer
    type: object
  controllers.TestRequest:
    properties:
      nome_para_aviso:
        type: string
      numero_whats:
        type: string
      password:
        description: Sempre será gerado
        type: string
      username:
        description: Pode ser opcional
        type: string
    type: object
  models.ClientData:
    properties:
      admin_enabled:
        example: 1
        type: integer
      admin_notes:
        example: Notas administrativas
        type: string
      allowed_ips:
        example: 192.168.1.1, 10.0.0.1
        type: string
      allowed_ua:
        example: Mozilla/5.0
        type: string
      app_id:
        example: app-12345
        type: string
      as_number:
        example: AS12345
        type: string
      bouquet:
        example: Pacote Premium
        type: string
      bypass_ua:
        example: CustomUserAgent
        type: string
      created_at:
        example: "2024-03-15T14:30:00Z"
        type: string
      created_by:
        example: admin
        type: string
      date_deleted:
        example: "2024-01-01T00:00:00Z"
        type: string
      deleted:
        example: 0
        type: integer
      email:
        example: joao@example.com
        type: string
      enabled:
        example: 1
        type: integer
      enviar_notificacao:
        example: "true"
        type: string
      exp_date:
        example: "2025-12-31T23:59:59Z"
        type: string
      force_server_id:
        example: 3
        type: integer
      forced_country:
        example: BR
        type: string
      franquia:
        example: Franquia ABC
        type: string
      franquia_member_id:
        example: 999
        type: integer
      id:
        example: 123
        type: integer
      is_e2:
        example: 1
        type: integer
      is_isplock:
        example: 0
        type: integer
      is_mag:
        example: 0
        type: integer
      is_restreamer:
        example: 0
        type: integer
      is_stalker:
        example: 0
        type: integer
      is_trial:
        example: 1
        type: integer
      isp_desc:
        example: Provedor XYZ
        type: string
      max_connections:
        example: 5
        type: integer
      member_id:
        example: 456
        type: integer
      nome_para_aviso:
        example: João Silva
        type: string
      notes2:
        example: Notas adicionais
        type: string
      numero_whats:
        example: "+5511999999999"
        type: string
      p2p:
        example: 0
        type: integer
      package_id:
        example: 11
        type: integer
      pair_id:
        example: 789
        type: integer
      password:
        example: hashed_password
        type: string
      play_token:
        example: xyz123token
        type: string
      reseller_notes:
        example: Notas do revendedor
        type: string
      root_enabled:
        example: 1
        type: integer
      sobrenome_avisos:
        example: Silva
        type: string
      trust_renew:
        example: 1
        type: integer
      username:
        example: john_doe
        type: string
      usr_device_key:
        example: device-key-123
        type: string
      usr_mac:
        example: 00:1A:2B:3C:4D:5E
        type: string
    type: object
  models.EditUserRequest:
    properties:
      bouquet:
        type: string
      device_id:
        type: integer
      enviar_notificacao:
        type: boolean
      mac:
        type: string
      nome_do_aplicativo:
        type: string
      nome_para_aviso:
        type: string
      numero_whats:
        type: string
      password:
        type: string
      reseller_notes:
        type: string
      user_id:
        type: integer
      username:
        type: string
      vencimento_aplicativo:
        type: string
    type: object
  models.ScreenRequest:
    properties:
      userID:
        type: integer
    required:
    - userID
    type: object
host: localhost:8080
info:
  contact:
    email: suporte@example.com
    name: Suporte
  description: Documentação da API IPTV
  title: API IPTV
  version: "1.0"
paths:
  /api/clients:
    get:
      consumes:
      - application/json
      description: Retorna todos os clientes associados ao usuário autenticado
      produces:
      - application/json
      responses:
        "200":
          description: Lista de clientes
          schema:
            items:
              $ref: '#/definitions/models.ClientData'
            type: array
        "401":
          description: Token inválido ou não fornecido
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno ao buscar clientes
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Lista clientes
      tags:
      - Clientes
  /api/clients-table:
    get:
      consumes:
      - application/json
      description: Retorna uma lista de clientes paginada e filtrada para uso em DataTables,
        associados ao member_id do token. Inclui filtro de status online e expiração.
      parameters:
      - description: 'Número da página (padrão: 1)'
        in: query
        name: page
        type: integer
      - description: 'Limite de registros por página (padrão: 10)'
        in: query
        name: limit
        type: integer
      - description: Termo de pesquisa para filtrar por username ou reseller_notes
        in: query
        name: search
        type: string
      - description: Filtrar usuários online (true para listar apenas online, false
          para todos)
        in: query
        name: online
        type: boolean
      - description: Filtrar clientes por vencimento (7, 15, 30, custom até 90 ou
          '0' para vencidos)
        in: query
        name: expiration_filter
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Retorna a lista de clientes paginada e informações de paginação
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Token inválido ou não fornecido
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno ao buscar ou processar os dados
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Retorna clientes paginados e filtrados
      tags:
      - ClientsTable
  /api/create-test:
    post:
      consumes:
      - application/json
      description: Gera um usuário e senha de teste para IPTV e retorna as credenciais.
      parameters:
      - description: Dados para criação do teste
        in: body
        name: test
        required: true
        schema:
          $ref: '#/definitions/controllers.TestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Teste criado com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Erro na requisição
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Token inválido
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Criar Teste IPTV
      tags:
      - Testes IPTV
  /api/credits:
    get:
      description: Retorna o total de créditos do usuário autenticado e o tempo restante
        do token em segundos.
      produces:
      - application/json
      responses:
        "200":
          description: Dados de créditos e tempo restante
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Token inválido ou expirado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao buscar créditos
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Obtém créditos atualizados e tempo restante do token
      tags:
      - Créditos
  /api/dashboard:
    get:
      description: Retorna os totais de clientes e testes ativos
      produces:
      - application/json
      responses:
        "200":
          description: Dados do dashboard
          schema:
            $ref: '#/definitions/controllers.DashboardResponse'
        "401":
          description: Token inválido
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Obtém os dados do dashboard
      tags:
      - Dashboard
  /api/details-error/{id_usuario}:
    get:
      consumes:
      - application/json
      description: Retorna os erros registrados na conta de um usuário, incluindo
        IP, dispositivo e motivo do erro.
      parameters:
      - description: ID do usuário
        in: path
        name: id_usuario
        required: true
        type: integer
      - description: 'Número de registros por página (padrão: 10)'
        in: query
        name: limit
        type: integer
      - description: 'Número da página (padrão: 1)'
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista paginada de erros do usuário
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ID inválido
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Nenhum erro encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Detalhes dos erros do usuário com paginação
      tags:
      - Erros
  /api/renew:
    post:
      consumes:
      - application/json
      description: Atualiza a data de expiração da conta com base no tempo selecionado.
      parameters:
      - description: Dados para renovação
        in: body
        name: renew
        required: true
        schema:
          $ref: '#/definitions/controllers.RenewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Conta renovada com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Erro na requisição
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Token inválido ou conta bloqueada
          schema:
            additionalProperties:
              type: string
            type: object
        "402":
          description: Créditos insuficientes
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Renovar Conta
      tags:
      - Renovação
  /api/tools-table/add-screen:
    post:
      consumes:
      - application/json
      description: Aumenta o número máximo de conexões do usuário e desconta créditos
        se aplicável
      parameters:
      - description: JSON contendo o ID do usuário
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ScreenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Retorna o novo total de telas e o saldo de créditos atualizado
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Erro nos parâmetros ou créditos insuficientes
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Token inválido
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno ao adicionar tela
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Adiciona uma nova tela ao usuário
      tags:
      - ToolsTable
  /api/tools-table/edit/{id}:
    put:
      consumes:
      - application/json
      description: Permite a edição de dados de um usuário na revenda autenticada
      parameters:
      - description: ID do usuário a ser editado
        in: path
        name: id
        required: true
        type: integer
      - description: Dados do usuário a serem editados
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.EditUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Usuário editado com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Erro na requisição
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Token inválido ou acesso negado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno ao processar a requisição
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Edita um usuário
      tags:
      - ToolsTable
  /api/tools-table/remove-screen:
    post:
      consumes:
      - application/json
      description: Diminui o número máximo de conexões do usuário, garantindo que
        tenha pelo menos uma tela ativa
      parameters:
      - description: JSON contendo o ID do usuário
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ScreenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Retorna o novo total de telas
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Erro nos parâmetros ou limite mínimo atingido
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Token inválido
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno ao remover tela
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove uma tela do usuário
      tags:
      - ToolsTable
  /login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário e retorna um token JWT se as credenciais forem
        válidas.
      parameters:
      - description: Credenciais de login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login realizado com sucesso
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Erro na requisição
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Credenciais inválidas
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Autenticação de Usuário
      tags:
      - Autenticação
  /logout:
    post:
      consumes:
      - application/json
      description: Remove o token ativo do usuário, invalidando sua sessão.
      produces:
      - application/json
      responses:
        "200":
          description: Logout realizado com sucesso
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Token inválido ou não autorizado
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Logout do Usuário
      tags:
      - Logout
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
