// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Suporte",
            "email": "suporte@example.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/change-due-date": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Altera o dia do vencimento da conta para o mês atual. Só pode ser feito uma vez a cada ALTERACAO_VENCIMENTO_FREQUENCIA_DIAS dias e o dia deve ser válido para o mês.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ações"
                ],
                "summary": "Alteração da data mensal de vencimento",
                "parameters": [
                    {
                        "description": "Exemplo: {\\",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ChangeDueDateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exemplo de resposta: {\\\"sucesso\\\": true, \\\"novo_exp_date\\\": 1716403200}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro de validação ou regra de negócio",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não fornecido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/clients": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna todos os clientes associados ao usuário autenticado. Permite filtrar por query string, login ou userID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clientes"
                ],
                "summary": "Lista clientes",
                "responses": {
                    "200": {
                        "description": "Lista de clientes, total_registros e token_expira_em",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não fornecido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao buscar clientes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/clients-table": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna uma lista de clientes paginada e filtrada para uso em DataTables, associados ao member_id do token. Inclui filtro de status online e expiração.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ClientsTable"
                ],
                "summary": "Retorna clientes paginados e filtrados",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Número da página (padrão: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limite de registros por página (padrão: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Termo de pesquisa para filtrar por username ou reseller_notes",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filtrar usuários online (true para listar apenas online, false para todos)",
                        "name": "online",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filtrar clientes por vencimento (7, 15, 30, custom até 90 ou \\'0\\' para vencidos)",
                        "name": "expiration_filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filtrar por ID do membro da franquia",
                        "name": "franquia_member_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por status de trial (0 para não trial, 1 para trial)",
                        "name": "is_trial",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna a lista de clientes paginada e informações de paginação",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não fornecido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao buscar ou processar os dados",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/clients/login/{login}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna todos os clientes associados ao usuário autenticado. Permite filtrar por query string, login ou userID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clientes"
                ],
                "summary": "Lista clientes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Login do cliente (username)",
                        "name": "login",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de clientes, total_registros e token_expira_em",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não fornecido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao buscar clientes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/clients/userid/{userid}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna todos os clientes associados ao usuário autenticado. Permite filtrar por query string, login ou userID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clientes"
                ],
                "summary": "Lista clientes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do cliente (userID)",
                        "name": "userid",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de clientes, total_registros e token_expira_em",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não fornecido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao buscar clientes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/create-test": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gera um usuário e senha de teste para IPTV e retorna as credenciais.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Testes IPTV"
                ],
                "summary": "Criar Teste IPTV",
                "parameters": [
                    {
                        "description": "Dados para criação do teste",
                        "name": "test",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.TestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teste criado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro na requisição ou usuário já existe (com credenciais fornecidas)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "Muitas tentativas de geração aleatória falharam",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/credits": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna o total de créditos do usuário autenticado e o tempo restante do token em segundos.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Créditos"
                ],
                "summary": "Obtém créditos atualizados e tempo restante do token",
                "responses": {
                    "200": {
                        "description": "Dados de créditos e tempo restante",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token inválido ou expirado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro ao buscar créditos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os totais de clientes e testes ativos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Obtém os dados do dashboard",
                "responses": {
                    "200": {
                        "description": "Dados do dashboard",
                        "schema": {
                            "$ref": "#/definitions/controllers.DashboardResponse"
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/details-error/{id_usuario}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os erros registrados na conta de um usuário, incluindo IP, dispositivo e motivo do erro.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Erros"
                ],
                "summary": "Detalhes dos erros do usuário com paginação",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do usuário",
                        "name": "id_usuario",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Número de registros por página (padrão: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Número da página (padrão: 1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista paginada de erros do usuário",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Nenhum erro encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/regions/allowed": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna as regiões permitidas configuradas na tabela settings como array de siglas.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gerenciamento de Regiões"
                ],
                "summary": "Obter Regiões Permitidas",
                "responses": {
                    "200": {
                        "description": "Exemplo: {\\\"allowed_countries\\\": [\\\"AR\\\", \\\"AU\\\", \\\"BR\\\", \\\"CA\\\", \\\"EU\\\", \\\"FR\\\", \\\"DE\\\", \\\"JP\\\", \\\"PT\\\", \\\"RU\\\", \\\"SA\\\", \\\"ZA\\\", \\\"UA\\\", \\\"US\\\"]}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/renew": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza a data de expiração da conta com base no tempo selecionado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Renovação"
                ],
                "summary": "Renovar Conta",
                "parameters": [
                    {
                        "description": "Dados para renovação",
                        "name": "renew",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RenewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conta renovada com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou conta bloqueada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "402": {
                        "description": "Créditos insuficientes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/renew-rollback": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Desfaz a última renovação: restaura exp_date e créditos a partir do backup da última renovação. Só pode ser feito uma vez a cada ROLLBACK_PERMITIDO_FREQUENCIA dias e dentro do período de ROLLBACK_PERMITIDO_DIAS após a renovação.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ações"
                ],
                "summary": "Rollback de renovação",
                "parameters": [
                    {
                        "description": "Exemplo: {\\",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RenewRollbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exemplo de resposta: {\\\"sucesso\\\": true, \\\"exp_date_anterior\\\": 1716403200, \\\"exp_date_restaurado\\\": 1716403200, \\\"creditos_devolvidos\\\": 3}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro de validação ou regra de negócio",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não fornecido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/tools-table/add-screen": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Aumenta o número máximo de conexões do usuário e desconta créditos se aplicável",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolsTable"
                ],
                "summary": "Adiciona uma nova tela ao usuário",
                "parameters": [
                    {
                        "description": "JSON contendo o ID do usuário",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ScreenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o novo total de telas e o saldo de créditos atualizado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro nos parâmetros ou créditos insuficientes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao adicionar tela",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/tools-table/edit/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Edita um usuário com base no ID fornecido. Permite a atualização de vários campos, incluindo nome de usuário, senha, notas do revendedor, número do WhatsApp, nome para aviso, envio de notificação, bouquet, aplicativos e preferências de notificação (Notificacao_conta, Notificacao_vods, Notificacao_jogos).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tools Table"
                ],
                "summary": "Edita um usuário existente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do Usuário para Editar. Campos como 'Notificacao_conta', 'Notificacao_vods', 'Notificacao_jogos' esperam true/false e são armazenados como 1/0.",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EditUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário editado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro: Requisição inválida ou dados ausentes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Erro: Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro: Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/tools-table/remove-screen": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Diminui o número máximo de conexões do usuário, garantindo que tenha pelo menos uma tela ativa",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolsTable"
                ],
                "summary": "Remove uma tela do usuário",
                "parameters": [
                    {
                        "description": "JSON contendo o ID do usuário",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ScreenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o novo total de telas",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro nos parâmetros ou limite mínimo atingido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno ao remover tela",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/trust-bonus": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adiciona dias extras à conta do usuário, conforme regras parametrizadas. Só é permitido para contas vencidas, quantidade de dias entre CONFIANCA_DIAS_MIN e CONFIANCA_DIAS_MAX, e apenas uma vez a cada CONFIANCA_FREQUENCIA_DIAS dias.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ações"
                ],
                "summary": "Liberação por confiança (dias extras)",
                "parameters": [
                    {
                        "description": "Exemplo: {\\",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.TrustBonusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exemplo de resposta: {\\\"sucesso\\\": true, \\\"novo_exp_date\\\": 1716403200}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro de validação ou regra de negócio",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não fornecido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/deleted": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna a lista de usuários que foram excluídos logicamente nos últimos 30 dias.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gerenciamento de Usuários"
                ],
                "summary": "Listar Contas Excluídas",
                "responses": {
                    "200": {
                        "description": "Lista de usuários excluídos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DeletedUser"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Marca o usuário como desativado e registra a exclusão lógica.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gerenciamento de Usuários"
                ],
                "summary": "Exclusão Lógica de Conta",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Usuário",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exemplo: {\\\"message\\\": \\\"Usuário excluído logicamente com sucesso\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}/region": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Altera o campo \"forced_country\" do usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gerenciamento de Usuários"
                ],
                "summary": "Forçar Região para Usuário",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Usuário",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload com o país forçado (ex: US)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserRegionPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exemplo: {\\\"message\\\": \\\"Região do usuário atualizada com sucesso\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID ou payload inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Usuário não tem permissão para alterar este usuário",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}/restore": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Restaura a conta do usuário removendo os campos de exclusão lógica.",
                "tags": [
                    "Gerenciamento de Usuários"
                ],
                "summary": "Restaurar Conta",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Usuário",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exemplo: {\\\"message\\\": \\\"Usuário restaurado com sucesso\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado ou não está excluído",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}/session": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a sessão ativa do usuário da tabela \"user_activity_now\".",
                "tags": [
                    "Gerenciamento de Usuários"
                ],
                "summary": "Expulsar Usuário (Kick)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Usuário",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exemplo: {\\\"message\\\": \\\"Sessão do usuário removida com sucesso\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Usuário não tem permissão para expulsar este usuário",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Altera o campo \"enabled\" do usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gerenciamento de Usuários"
                ],
                "summary": "Ativar/Desativar Conta",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Usuário",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload contendo o novo status do usuário",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserStatusPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exemplo: {\\\"message\\\": \\\"Status do usuário atualizado com sucesso\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID ou payload inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Usuário não tem permissão para alterar este usuário",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/version": {
            "get": {
                "description": "Retorna a versão atual da API definida no arquivo .env",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Versão"
                ],
                "summary": "Obter versão da API",
                "responses": {
                    "200": {
                        "description": "Versão da API",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health of the service, including database and Redis connections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Exemplo: {\\\"status\\\": \\\"OK\\\", \\\"database\\\": \\\"OK\\\", \\\"redis\\\": \\\"OK\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "503": {
                        "description": "Exemplo: {\\\"status\\\": \\\"Error\\\", \\\"database\\\": \\\"Error: connection failed\\\", \\\"redis\\\": \\\"OK\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Autentica um usuário e retorna um token JWT se as credenciais forem válidas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autenticação"
                ],
                "summary": "Autenticação de Usuário",
                "parameters": [
                    {
                        "description": "Credenciais de login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login realizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Credenciais inválidas",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove o token ativo do usuário, invalidando sua sessão.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logout"
                ],
                "summary": "Logout do Usuário",
                "responses": {
                    "200": {
                        "description": "Logout realizado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou não autorizado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ChangeDueDateRequest": {
            "type": "object",
            "properties": {
                "motivo": {
                    "type": "string"
                },
                "nova_data_vencimento": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.DashboardResponse": {
            "type": "object",
            "properties": {
                "canaisOff": {
                    "type": "integer"
                },
                "lastUpdated": {
                    "description": "Ou sql.NullString se puder ser nulo",
                    "type": "string"
                },
                "totalCanais": {
                    "type": "integer"
                },
                "totalClientes": {
                    "type": "integer"
                },
                "totalClientesRevenda": {
                    "type": "integer"
                },
                "totalEpisodiosSeries": {
                    "type": "integer"
                },
                "totalFilmes": {
                    "type": "integer"
                },
                "totalSeries": {
                    "type": "integer"
                },
                "totalTestesAtivos": {
                    "type": "integer"
                },
                "totalVencido": {
                    "type": "integer"
                }
            }
        },
        "controllers.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginResponse": {
            "type": "object",
            "properties": {
                "credits": {
                    "type": "number"
                },
                "member_group_id": {
                    "type": "integer"
                },
                "member_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "controllers.RenewRequest": {
            "type": "object",
            "properties": {
                "id_cliente": {
                    "type": "integer"
                },
                "quantidade_renovacao_em_meses": {
                    "type": "integer"
                }
            }
        },
        "controllers.RenewRollbackRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.TestRequest": {
            "type": "object",
            "properties": {
                "franquia_member_id": {
                    "description": "Novo campo opcional",
                    "type": "integer"
                },
                "nome_para_aviso": {
                    "type": "string"
                },
                "numero_whats": {
                    "type": "string"
                },
                "password": {
                    "description": "Sempre será gerado",
                    "type": "string"
                },
                "username": {
                    "description": "Pode ser opcional",
                    "type": "string"
                }
            }
        },
        "controllers.TrustBonusRequest": {
            "type": "object",
            "properties": {
                "dias_adicionados": {
                    "type": "integer"
                },
                "motivo": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.AplicativoInfo": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "nome_do_aplicativo": {
                    "type": "string"
                },
                "vencimento_aplicativo": {
                    "type": "string"
                }
            }
        },
        "models.DeletedUser": {
            "type": "object",
            "properties": {
                "delete_reason": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "exp_date": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "last_login": {
                    "type": "string"
                },
                "max_connections": {
                    "type": "integer"
                },
                "member_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.EditUserRequest": {
            "type": "object",
            "properties": {
                "Notificacao_conta": {
                    "description": "Preferência de notificação para conta",
                    "type": "boolean"
                },
                "Notificacao_jogos": {
                    "description": "Preferência de notificação para jogos",
                    "type": "boolean"
                },
                "Notificacao_vods": {
                    "description": "Preferência de notificação para VODs",
                    "type": "boolean"
                },
                "Valor_plano": {
                    "description": "Novo campo para o valor do plano",
                    "type": "number"
                },
                "aplicativos": {
                    "description": "Slice de AplicativoInfo",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AplicativoInfo"
                    }
                },
                "bouquet": {
                    "description": "String JSON representando um array de IDs",
                    "type": "string"
                },
                "enviar_notificacao": {
                    "description": "Ponteiro para bool",
                    "type": "boolean"
                },
                "franquia_member_id": {
                    "description": "ID da franquia (opcional)",
                    "type": "integer"
                },
                "nome_para_aviso": {
                    "description": "Ponteiro para string",
                    "type": "string"
                },
                "numero_whats": {
                    "description": "Ponteiro para string para aceitar null ou string vazia",
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 4
                },
                "reseller_notes": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 4
                }
            }
        },
        "models.ScreenRequest": {
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "userID": {
                    "type": "integer"
                }
            }
        },
        "models.UserRegionPayload": {
            "type": "object",
            "required": [
                "forced_country"
            ],
            "properties": {
                "forced_country": {
                    "description": "Ex: \"US\"",
                    "type": "string"
                }
            }
        },
        "models.UserStatusPayload": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.5",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "API IPTV",
	Description:      "Documentação da API IPTV",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
